{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/src/Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport DonutProgressBar from './DonutProgressBar';\nimport Loading from './Loading';\nimport { useQuestions } from './QuestionsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const [score, setScore] = useState(-1);\n  const [error, setError] = useState(null);\n  const {\n    creatorName\n  } = useQuestions();\n  const navigate = useNavigate();\n  const {\n    gameId\n  } = useParams(); // Assuming you're using React Router and the gameId is part of the URL\n\n  useEffect(() => {\n    const fetchScore = async () => {\n      const playerId = localStorage.getItem('userId'); // Retrieve userId stored in local storage\n      if (!playerId || !gameId) {\n        setError('Invalid game or user information');\n        return;\n      }\n      try {\n        const response = await fetch(`https://6qpujfk4qe.execute-api.us-west-1.amazonaws.com/prod/get-score?gameId=${gameId}&playerId=${playerId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        if (response.ok) {\n          setScore(data.score);\n        } else {\n          navigate('/');\n          throw new Error(data.message || 'Failed to fetch score');\n        }\n      } catch (err) {\n        navigate('/');\n        setError(err.message);\n      }\n    };\n    fetchScore();\n  }, [gameId]);\n  const buttonStyle = {\n    backgroundColor: 'black',\n    color: 'white',\n    padding: '10px 20px',\n    border: '2px solid gray',\n    borderRadius: '5px',\n    zIndex: 1,\n    marginTop: '20px' // Adds some space above the button\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center mt-5\",\n      style: {\n        whiteSpace: 'pre-line'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '3vh'\n        },\n        children: [\"Your Wavelength Score \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 75\n        }, this), \" with \", creatorName, \" is\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), score !== -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(DonutProgressBar, {\n          percentage: score * 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => navigate('/'),\n        children: \"Create New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-one\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-two\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-three\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-four\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-five\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-six\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-seven\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-eight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-nine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-ten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-eleven\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line line-twelve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"2+JQh3hITvwHyfrQVYgdfE6k6PE=\", false, function () {\n  return [useQuestions, useNavigate, useParams];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","DonutProgressBar","Loading","useQuestions","jsxDEV","_jsxDEV","Result","_s","score","setScore","error","setError","creatorName","navigate","gameId","fetchScore","playerId","localStorage","getItem","response","fetch","method","headers","data","json","console","log","ok","Error","message","err","buttonStyle","backgroundColor","color","padding","border","borderRadius","zIndex","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","whiteSpace","marginBottom","display","justifyContent","percentage","onClick","_c","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/src/Result.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport DonutProgressBar from './DonutProgressBar';\nimport Loading from './Loading';\nimport { useQuestions } from './QuestionsContext';\n\nconst Result = () => {\n    const [score, setScore] = useState(-1);\n    const [error, setError] = useState(null);\n    const { creatorName } = useQuestions();\n    const navigate = useNavigate();\n    const { gameId } = useParams(); // Assuming you're using React Router and the gameId is part of the URL\n\n    useEffect(() => {\n        const fetchScore = async () => {\n            const playerId = localStorage.getItem('userId'); // Retrieve userId stored in local storage\n            if (!playerId || !gameId) {\n                setError('Invalid game or user information');\n                return;\n            }\n\n            try {\n                const response = await fetch(`https://6qpujfk4qe.execute-api.us-west-1.amazonaws.com/prod/get-score?gameId=${gameId}&playerId=${playerId}`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n                const data = await response.json();\n                console.log(data);\n                if (response.ok) {\n                    setScore(data.score); \n                } else {\n                    navigate('/');\n                    throw new Error(data.message || 'Failed to fetch score');\n                }\n            } catch (err) {\n                navigate('/');\n                setError(err.message);\n            }\n        };\n\n        fetchScore();\n    }, [gameId]);\n\n    const buttonStyle = {\n        backgroundColor: 'black',\n        color: 'white',\n        padding: '10px 20px',\n        border: '2px solid gray',\n        borderRadius: '5px',\n        zIndex: 1,\n        marginTop: '20px' // Adds some space above the button\n    };\n\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div>\n            <div className=\"container text-center mt-5\" style={{ whiteSpace: 'pre-line' }}>\n                <h3 style={{ marginBottom: '3vh' }}>Your Wavelength Score <br /> with {creatorName} is</h3>\n                {score !== -1 && (\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <DonutProgressBar percentage={score * 10} />\n                    </div>\n                )}\n                <button style={buttonStyle} onClick={() => navigate('/')}>\n                    Create New Game\n                </button>\n            </div>\n            <div className=\"line line-one\"></div>\n            <div className=\"line line-two\"></div>\n            <div className=\"line line-three\"></div>\n            <div className=\"line line-four\"></div>\n            <div className=\"line line-five\"></div>\n            <div className=\"line line-six\"></div>\n            <div className=\"line line-seven\"></div>\n            <div className=\"line line-eight\"></div>\n            <div className=\"line line-nine\"></div>\n            <div className=\"line line-ten\"></div>\n            <div className=\"line line-eleven\"></div>\n            <div className=\"line line-twelve\"></div>\n        </div>\n    );\n};\n\nexport default Result;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}