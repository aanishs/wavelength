{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuestions } from './QuestionsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayQuestions = () => {\n  _s();\n  const {\n    questions\n  } = useQuestions();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Specific colors for each option\n  const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700']; // Tomato, SteelBlue, LimeGreen, Gold\n\n  const handleOptionClick = index => {\n    setSelectedOption(index); // Set the selected option\n    // Logic to handle moving to the next question could go here\n  };\n  const question = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: '80%',\n          margin: 'auto',\n          height: '20px',\n          backgroundColor: '#ddd'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${(currentQuestionIndex + 1) / questions.length * 100}%`,\n            height: '100%',\n            backgroundColor: '#4CAF50'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '10px',\n        marginTop: '20px'\n      },\n      children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: '10px 20px',\n          border: '2px solid transparent',\n          borderRadius: '5px',\n          backgroundColor: selectedOption === index ? 'black' : '#f4f4f4',\n          // Dark background for the selected option\n          color: selectedOption === index ? 'white' : 'black',\n          boxShadow: `0 0 8px ${colors[index]}`,\n          // Specific color for each button\n          outline: selectedOption === index ? `3px solid ${colors[index]}` : 'none' // Glow effect for the selected option\n        },\n        onClick: () => handleOptionClick(index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplayQuestions, \"5rYZmGGY4TRs3wM0MlNhb9wjKIM=\", false, function () {\n  return [useQuestions];\n});\n_c = DisplayQuestions;\nexport default DisplayQuestions;\nvar _c;\n$RefreshReg$(_c, \"DisplayQuestions\");","map":{"version":3,"names":["React","useState","useQuestions","jsxDEV","_jsxDEV","DisplayQuestions","_s","questions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","colors","handleOptionClick","index","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","height","backgroundColor","length","display","gridTemplateColumns","gap","marginTop","options","map","option","padding","border","borderRadius","color","boxShadow","outline","onClick","_c","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuestions } from './QuestionsContext';\n\nconst DisplayQuestions = () => {\n    const { questions } = useQuestions();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    // Specific colors for each option\n    const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700']; // Tomato, SteelBlue, LimeGreen, Gold\n\n    const handleOptionClick = (index) => {\n        setSelectedOption(index); // Set the selected option\n        // Logic to handle moving to the next question could go here\n    };\n\n    const question = questions[currentQuestionIndex];\n\n    return (\n        <div className=\"container text-center mt-5\">\n            <div className=\"question-header\">\n                <h2>{question.question}</h2>\n                <div className=\"progress-bar\" style={{ width: '80%', margin: 'auto', height: '20px', backgroundColor: '#ddd' }}>\n                    <div className=\"progress\" style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%`, height: '100%', backgroundColor: '#4CAF50' }}></div>\n                </div>\n            </div>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px', marginTop: '20px' }}>\n                {question.options.map((option, index) => (\n                    <button\n                        key={index}\n                        style={{\n                            padding: '10px 20px',\n                            border: '2px solid transparent',\n                            borderRadius: '5px',\n                            backgroundColor: selectedOption === index ? 'black' : '#f4f4f4', // Dark background for the selected option\n                            color: selectedOption === index ? 'white' : 'black',\n                            boxShadow: `0 0 8px ${colors[index]}`, // Specific color for each button\n                            outline: selectedOption === index ? `3px solid ${colors[index]}` : 'none' // Glow effect for the selected option\n                        }}\n                        onClick={() => handleOptionClick(index)}\n                    >\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default DisplayQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}