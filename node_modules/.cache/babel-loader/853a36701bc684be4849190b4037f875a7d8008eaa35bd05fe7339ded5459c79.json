{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuestions } from './QuestionsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayQuestions = () => {\n  _s();\n  const {\n    questions\n  } = useQuestions();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(new Array(questions.length).fill(0));\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(-1);\n\n  // Fixed colors for each option\n  const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700'];\n  const handleOptionClick = optionIndex => {\n    setSelectedOptionIndex(optionIndex);\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = optionIndex + 1;\n    setResponses(updatedResponses);\n    if (currentQuestionIndex < questions.length - 1) {\n      setTimeout(() => {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedOptionIndex(-1); // Reset selection\n      }, 1000); // Delay to show selection effect\n    } else {\n      console.log('End of questions', updatedResponses);\n    }\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    question,\n    options\n  } = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '10px'\n      },\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'balck',\n          // Specific color for each option\n          color: 'white',\n          padding: '10px 20px',\n          border: '2px solid gray',\n          // Gray border\n          borderRadius: '5px',\n          boxShadow: selectedOptionIndex === index ? `0 0 8px 3px ${colors[index]}` : 'none' // Glow effect for selected button\n        },\n        onClick: () => handleOptionClick(index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplayQuestions, \"ubR1Dd86RYpbpWdDOvnwpCn5TZM=\", false, function () {\n  return [useQuestions];\n});\n_c = DisplayQuestions;\nexport default DisplayQuestions;\nvar _c;\n$RefreshReg$(_c, \"DisplayQuestions\");","map":{"version":3,"names":["React","useState","useQuestions","jsxDEV","_jsxDEV","DisplayQuestions","_s","questions","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","selectedOptionIndex","setSelectedOptionIndex","colors","handleOptionClick","optionIndex","updatedResponses","setTimeout","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","className","style","display","gridTemplateColumns","gap","map","option","index","backgroundColor","color","padding","border","borderRadius","boxShadow","onClick","_c","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuestions } from './QuestionsContext';\n\nconst DisplayQuestions = () => {\n    const { questions } = useQuestions();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [responses, setResponses] = useState(new Array(questions.length).fill(0));\n    const [selectedOptionIndex, setSelectedOptionIndex] = useState(-1);\n\n    // Fixed colors for each option\n    const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700'];\n\n    const handleOptionClick = (optionIndex) => {\n        setSelectedOptionIndex(optionIndex);\n        const updatedResponses = [...responses];\n        updatedResponses[currentQuestionIndex] = optionIndex + 1;\n        setResponses(updatedResponses);\n\n        if (currentQuestionIndex < questions.length - 1) {\n            setTimeout(() => {\n                setCurrentQuestionIndex(currentQuestionIndex + 1);\n                setSelectedOptionIndex(-1); // Reset selection\n            }, 1000); // Delay to show selection effect\n        } else {\n            console.log('End of questions', updatedResponses);\n        }\n    };\n\n    if (questions.length === 0) {\n        return <div>Loading questions...</div>;\n    }\n\n    const { question, options } = questions[currentQuestionIndex];\n\n    return (\n        <div className=\"container text-center mt-5\">\n            <h2>{question}</h2>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px' }}>\n                {options.map((option, index) => (\n                    <button\n                        key={index}\n                        style={{\n                            backgroundColor: 'balck', // Specific color for each option\n                            color: 'white',\n                            padding: '10px 20px',\n                            border: '2px solid gray', // Gray border\n                            borderRadius: '5px',\n                            boxShadow: selectedOptionIndex === index ? `0 0 8px 3px ${colors[index]}` : 'none', // Glow effect for selected button\n                        }}\n                        onClick={() => handleOptionClick(index)}\n                    >\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default DisplayQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}