{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useQuestions } from './QuestionsContext';\nimport './DisplayQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockTimer = ({\n  onTimerEnd\n}) => {\n  _s();\n  useEffect(() => {\n    const timer = setTimeout(onTimerEnd, 7000); // 7 seconds for full rotation\n    return () => clearTimeout(timer);\n  }, [onTimerEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(ClockTimer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ClockTimer;\nconst DisplayQuestions = () => {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const {\n    questions\n  } = useQuestions();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(new Array(questions.length).fill(0));\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(-1);\n  const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700'];\n  const handleOptionClick = optionIndex => {\n    setSelectedOptionIndex(optionIndex);\n    const updatedResponses = [...responses];\n    updatedResponses[currentQuestionIndex] = optionIndex + 1;\n    setResponses(updatedResponses);\n    moveToNextQuestion();\n  };\n  const createGame = async () => {\n    _s2();\n    const {\n      userName,\n      questionIds\n    } = useContext(QuestionsContext);\n    const payload = {\n      userId,\n      userName,\n      questionSet: questionIds,\n      answerSet: selectedOptionIndex\n    };\n    try {\n      const response = await fetch('/api/create-game', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      console.log('Game created:', data);\n    } catch (error) {\n      console.error('Failed to create game:', error);\n    }\n  };\n  _s2(createGame, \"WoMmNiHLKXQohEp7Hxca/zgwUcg=\");\n  const moveToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setTimeout(() => {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedOptionIndex(-1); // Reset selection\n      }, 200); // Delay to show selection effect\n    } else {\n      console.log('End of questions');\n    }\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    question,\n    options\n  } = questions[currentQuestionIndex];\n  const roundText = `Wavelength round ${currentQuestionIndex + 1} of ${questions.length}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: roundText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ClockTimer, {\n        onTimerEnd: moveToNextQuestion\n      }, currentQuestionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '10px'\n        },\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: 'black',\n            color: 'white',\n            padding: '10px 20px',\n            border: '2px solid gray',\n            borderRadius: '5px',\n            boxShadow: selectedOptionIndex === index ? `0 0 5px 2px ${colors[index]}` : 'none'\n          },\n          onClick: () => handleOptionClick(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s3(DisplayQuestions, \"ubR1Dd86RYpbpWdDOvnwpCn5TZM=\", false, function () {\n  return [useQuestions];\n});\n_c2 = DisplayQuestions;\nexport default DisplayQuestions;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClockTimer\");\n$RefreshReg$(_c2, \"DisplayQuestions\");","map":{"version":3,"names":["React","useState","useEffect","useQuestions","jsxDEV","_jsxDEV","ClockTimer","onTimerEnd","_s","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DisplayQuestions","_s3","_s2","$RefreshSig$","questions","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","selectedOptionIndex","setSelectedOptionIndex","colors","handleOptionClick","optionIndex","updatedResponses","moveToNextQuestion","createGame","userName","questionIds","useContext","QuestionsContext","payload","userId","questionSet","answerSet","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","question","options","roundText","style","display","gridTemplateColumns","gap","map","option","index","backgroundColor","color","padding","border","borderRadius","boxShadow","onClick","_c2","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuestions } from './QuestionsContext';\nimport './DisplayQuestions.css';\n\n\nconst ClockTimer = ({ onTimerEnd }) => {\n    useEffect(() => {\n        const timer = setTimeout(onTimerEnd, 7000); // 7 seconds for full rotation\n        return () => clearTimeout(timer);\n    }, [onTimerEnd]);\n\n    return (\n        <div className=\"clock\">\n            <div className=\"hand\"></div>\n        </div>\n    );\n}\n\nconst DisplayQuestions = () => {\n    const { questions } = useQuestions();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [responses, setResponses] = useState(new Array(questions.length).fill(0));\n    const [selectedOptionIndex, setSelectedOptionIndex] = useState(-1);\n\n    const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700'];\n\n    const handleOptionClick = (optionIndex) => {\n        setSelectedOptionIndex(optionIndex);\n        const updatedResponses = [...responses];\n        updatedResponses[currentQuestionIndex] = optionIndex + 1;\n        setResponses(updatedResponses);\n\n        moveToNextQuestion();\n    };\n\n    const createGame = async () => {\n        const {userName, questionIds} = useContext(QuestionsContext);\n    \n        const payload = {\n            userId,\n            userName,\n            questionSet: questionIds,\n            answerSet: selectedOptionIndex\n        };\n    \n        try {\n            const response = await fetch('/api/create-game', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(payload)\n            });\n            const data = await response.json();\n            console.log('Game created:', data);\n        } catch (error) {\n            console.error('Failed to create game:', error);\n        }\n    };\n    \n    const moveToNextQuestion = () => {\n        if (currentQuestionIndex < questions.length - 1) {\n            setTimeout(() => {\n                setCurrentQuestionIndex(currentQuestionIndex + 1);\n                setSelectedOptionIndex(-1); // Reset selection\n            }, 200); // Delay to show selection effect\n        } else {\n            console.log('End of questions');\n        }\n    };\n\n    if (questions.length === 0) {\n        return <div>Loading questions...</div>;\n    }\n\n    const { question, options } = questions[currentQuestionIndex];\n    const roundText = `Wavelength round ${currentQuestionIndex + 1} of ${questions.length}`;\n\n    return (\n        <div>\n            <div className='round-container'>\n                <h6>{roundText}</h6>\n            </div>\n        <div className=\"container text-center mt-5\">\n            <h1>{question}</h1>\n            <ClockTimer key={currentQuestionIndex} onTimerEnd={moveToNextQuestion} />\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px' }}>\n                {options.map((option, index) => (\n                    <button\n                        key={index}\n                        style={{\n                            backgroundColor: 'black',\n                            color: 'white',\n                            padding: '10px 20px',\n                            border: '2px solid gray',\n                            borderRadius: '5px',\n                            boxShadow: selectedOptionIndex === index ? `0 0 5px 2px ${colors[index]}` : 'none',\n                        }}\n                        onClick={() => handleOptionClick(index)}\n                    >\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n        </div>\n    );\n};\n\nexport default DisplayQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}