{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { QuestionsContext } from './QuestionsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayQuestions = () => {\n  _s();\n  const {\n    questions,\n    currentQuestionIndex\n  } = useContext(QuestionsContext);\n  const [selectedOption, setSelectedOption] = useState(null);\n  if (!questions.length || questions.length <= currentQuestionIndex) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  if (currentQuestionIndex < questions.length - 1) {\n    setTimeout(() => {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOptionIndex(-1); // Reset selection\n    }, 200); // Delay to show selection effect\n  } else {\n    console.log('End of questions', updatedResponses);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'white',\n        textAlign: 'center'\n      },\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick(index),\n        style: {\n          background: selectedOption === index ? 'none' : 'black',\n          color: 'white',\n          border: '2px solid gray',\n          padding: '10px 20px',\n          cursor: 'pointer',\n          outline: selectedOption === index ? '3px solid orange' : 'none',\n          boxShadow: '0px 0px 8px rgba(255, 165, 0, 0.8)'\n        },\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplayQuestions, \"/cw69MsbYxM+F+UtDZyjAwZDPE8=\");\n_c = DisplayQuestions;\nexport default DisplayQuestions;\nvar _c;\n$RefreshReg$(_c, \"DisplayQuestions\");","map":{"version":3,"names":["React","useState","useContext","QuestionsContext","jsxDEV","_jsxDEV","DisplayQuestions","_s","questions","currentQuestionIndex","selectedOption","setSelectedOption","length","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","setTimeout","setCurrentQuestionIndex","setSelectedOptionIndex","console","log","updatedResponses","className","style","padding","maxWidth","margin","color","textAlign","question","display","flexDirection","gap","options","map","option","index","onClick","handleOptionClick","background","border","cursor","outline","boxShadow","_c","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/client/src/DisplayQuestions.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { QuestionsContext } from './QuestionsContext';\n\nconst DisplayQuestions = () => {\n    const { questions, currentQuestionIndex } = useContext(QuestionsContext);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    if (!questions.length || questions.length <= currentQuestionIndex) {\n        return <div>Loading questions...</div>;\n    }\n\n    const currentQuestion = questions[currentQuestionIndex];\n\n    if (currentQuestionIndex < questions.length - 1) {\n        setTimeout(() => {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setSelectedOptionIndex(-1); // Reset selection\n        }, 200); // Delay to show selection effect\n    } else {\n        console.log('End of questions', updatedResponses);\n    }\n\n    return (\n        <div className=\"question-container\" style={{ padding: '20px', maxWidth: '600px', margin: 'auto' }}>\n            <h3 style={{ color: 'white', textAlign: 'center' }}>{currentQuestion.question}</h3>\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n                {currentQuestion.options.map((option, index) => (\n                    <button\n                        key={index}\n                        onClick={() => handleOptionClick(index)}\n                        style={{\n                            background: selectedOption === index ? 'none' : 'black',\n                            color: 'white',\n                            border: '2px solid gray',\n                            padding: '10px 20px',\n                            cursor: 'pointer',\n                            outline: selectedOption === index ? '3px solid orange' : 'none',\n                            boxShadow: '0px 0px 8px rgba(255, 165, 0, 0.8)'\n                        }}\n                    >\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default DisplayQuestions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,SAAS;IAAEC;EAAqB,CAAC,GAAGP,UAAU,CAACC,gBAAgB,CAAC;EACxE,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1D,IAAI,CAACO,SAAS,CAACI,MAAM,IAAIJ,SAAS,CAACI,MAAM,IAAIH,oBAAoB,EAAE;IAC/D,oBAAOJ,OAAA;MAAAQ,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,MAAMC,eAAe,GAAGV,SAAS,CAACC,oBAAoB,CAAC;EAEvD,IAAIA,oBAAoB,GAAGD,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;IAC7CO,UAAU,CAAC,MAAM;MACbC,uBAAuB,CAACX,oBAAoB,GAAG,CAAC,CAAC;MACjDY,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACb,CAAC,MAAM;IACHC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,gBAAgB,CAAC;EACrD;EAEA,oBACInB,OAAA;IAAKoB,SAAS,EAAC,oBAAoB;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAhB,QAAA,gBAC9FR,OAAA;MAAIqB,KAAK,EAAE;QAAEI,KAAK,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAlB,QAAA,EAAEK,eAAe,CAACc;IAAQ;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnFZ,OAAA;MAAKqB,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAtB,QAAA,EACjEK,eAAe,CAACkB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvClC,OAAA;QAEImC,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAACF,KAAK,CAAE;QACxCb,KAAK,EAAE;UACHgB,UAAU,EAAEhC,cAAc,KAAK6B,KAAK,GAAG,MAAM,GAAG,OAAO;UACvDT,KAAK,EAAE,OAAO;UACda,MAAM,EAAE,gBAAgB;UACxBhB,OAAO,EAAE,WAAW;UACpBiB,MAAM,EAAE,SAAS;UACjBC,OAAO,EAAEnC,cAAc,KAAK6B,KAAK,GAAG,kBAAkB,GAAG,MAAM;UAC/DO,SAAS,EAAE;QACf,CAAE;QAAAjC,QAAA,EAEDyB;MAAM,GAZFC,KAAK;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaN,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACV,EAAA,CA3CID,gBAAgB;AAAAyC,EAAA,GAAhBzC,gBAAgB;AA6CtB,eAAeA,gBAAgB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}