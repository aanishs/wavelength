{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/client/src/Scoreboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Scoreboard.css'; // Make sure to import your new CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scoreboard = () => {\n  _s();\n  const {\n    gameId\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchScores = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`https://6qpujfk4qe.execute-api.us-west-1.amazonaws.com/prod/get-all-players?gameId=${gameId}`);\n        const data = await response.json();\n        if (response.ok) {\n          setPlayers(data.players);\n        } else {\n          throw new Error(data.message || \"Failed to fetch scores\");\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Fetching scores failed:\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchScores();\n  }, [gameId]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading scores...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scoreboard\",\n    children: players.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Player Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, player.playerID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No scores available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Scoreboard, \"ieMSb6bJWW6qcS4wvtdbr3hwpaM=\", false, function () {\n  return [useParams];\n});\n_c = Scoreboard;\nexport default Scoreboard;\nvar _c;\n$RefreshReg$(_c, \"Scoreboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Scoreboard","_s","gameId","players","setPlayers","isLoading","setIsLoading","error","setError","fetchScores","response","fetch","data","json","ok","Error","message","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","player","playerName","score","playerID","_c","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/client/src/Scoreboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Scoreboard.css'; // Make sure to import your new CSS\n\nconst Scoreboard = () => {\n    const { gameId } = useParams();\n    const [players, setPlayers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchScores = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(`https://6qpujfk4qe.execute-api.us-west-1.amazonaws.com/prod/get-all-players?gameId=${gameId}`);\n                const data = await response.json();\n                if (response.ok) {\n                    setPlayers(data.players);\n                } else {\n                    throw new Error(data.message || \"Failed to fetch scores\");\n                }\n            } catch (err) {\n                setError(err.message);\n                console.error(\"Fetching scores failed:\", err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchScores();\n    }, [gameId]);\n\n    if (isLoading) return <div className=\"loading\">Loading scores...</div>;\n    if (error) return <div className=\"error\">Error: {error}</div>;\n\n    return (\n        <div className=\"scoreboard\">\n            {players.length > 0 ? (\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Player Name</th>\n                            <th>Score</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {players.map(player => (\n                            <tr key={player.playerID}>\n                                <td>{player.playerName}</td>\n                                <td>{player.score}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            ) : (\n                <p>No scores available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Scoreboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}