{"ast":null,"code":"var _jsxFileName = \"/Users/aanishsachdev/Desktop/Wavelength/client/src/DonutProgressBar.js\";\nimport React from 'react';\nimport './DonutProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonutProgressBar = () => {\n  let percentage = 40;\n  const getGradient = percentage => {\n    const colorStops = [{\n      color: '#ea2f86',\n      stop: 0\n    }, {\n      color: '#f09c0a',\n      stop: 20\n    }, {\n      color: '#fae000',\n      stop: 40\n    }, {\n      color: '#93e223',\n      stop: 60\n    }, {\n      color: '#4070d3',\n      stop: 80\n    }, {\n      color: '#493c9e',\n      stop: 100\n    }];\n    let gradient = colorStops.reduce((acc, stop, index) => {\n      if (percentage >= stop.stop) {\n        acc += `${stop.color} ${stop.stop}%, `;\n      } else if (percentage < stop.stop && acc === '') {\n        // This covers the case where the percentage is less than the first stop\n        acc += `${stop.color} ${percentage}%, black ${percentage}%, black 100%`;\n        return acc;\n      } else if (percentage < stop.stop) {\n        acc += `${colorStops[index - 1].color} ${percentage}%, black ${percentage}%, black 100%`;\n        return acc;\n      }\n      return acc;\n    }, '');\n\n    // Close the gradient if no black was added (i.e., percentage was 100%)\n    if (!gradient.includes('black')) {\n      gradient += `black ${percentage}%, black 100%`;\n    }\n    return `conic-gradient(${gradient})`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle-one\",\n    style: {\n      background: getGradient(percentage)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percentage\",\n      children: [percentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = DonutProgressBar;\nexport default DonutProgressBar;\nvar _c;\n$RefreshReg$(_c, \"DonutProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DonutProgressBar","percentage","getGradient","colorStops","color","stop","gradient","reduce","acc","index","includes","className","style","background","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aanishsachdev/Desktop/Wavelength/client/src/DonutProgressBar.js"],"sourcesContent":["import React from 'react';\nimport './DonutProgressBar.css';\n\nconst DonutProgressBar = () => {\n    let percentage = 40;\n    const getGradient = (percentage) => {\n        const colorStops = [\n            { color: '#ea2f86', stop: 0 },\n            { color: '#f09c0a', stop: 20 },\n            { color: '#fae000', stop: 40 },\n            { color: '#93e223', stop: 60 },\n            { color: '#4070d3', stop: 80 },\n            { color: '#493c9e', stop: 100 }\n        ];\n\n        let gradient = colorStops.reduce((acc, stop, index) => {\n            if (percentage >= stop.stop) {\n                acc += `${stop.color} ${stop.stop}%, `;\n            } else if (percentage < stop.stop && acc === '') { // This covers the case where the percentage is less than the first stop\n                acc += `${stop.color} ${percentage}%, black ${percentage}%, black 100%`;\n                return acc;\n            } else if (percentage < stop.stop) {\n                acc += `${colorStops[index - 1].color} ${percentage}%, black ${percentage}%, black 100%`;\n                return acc;\n            }\n            return acc;\n        }, '');\n\n        // Close the gradient if no black was added (i.e., percentage was 100%)\n        if (!gradient.includes('black')) {\n            gradient += `black ${percentage}%, black 100%`;\n        }\n\n        return `conic-gradient(${gradient})`;\n    };\n\n    return (\n        <div className=\"circle-one\" style={{ background: getGradient(percentage) }}>\n            <div className=\"inner-circle\"></div>\n            <div className=\"percentage\">\n                {percentage}%\n            </div>\n        </div>\n    );\n}\n\nexport default DonutProgressBar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC3B,IAAIC,UAAU,GAAG,EAAE;EACnB,MAAMC,WAAW,GAAID,UAAU,IAAK;IAChC,MAAME,UAAU,GAAG,CACf;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAE,CAAC,EAC7B;MAAED,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC9B;MAAED,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC9B;MAAED,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC9B;MAAED,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC9B;MAAED,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAI,CAAC,CAClC;IAED,IAAIC,QAAQ,GAAGH,UAAU,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEH,IAAI,EAAEI,KAAK,KAAK;MACnD,IAAIR,UAAU,IAAII,IAAI,CAACA,IAAI,EAAE;QACzBG,GAAG,IAAK,GAAEH,IAAI,CAACD,KAAM,IAAGC,IAAI,CAACA,IAAK,KAAI;MAC1C,CAAC,MAAM,IAAIJ,UAAU,GAAGI,IAAI,CAACA,IAAI,IAAIG,GAAG,KAAK,EAAE,EAAE;QAAE;QAC/CA,GAAG,IAAK,GAAEH,IAAI,CAACD,KAAM,IAAGH,UAAW,YAAWA,UAAW,eAAc;QACvE,OAAOO,GAAG;MACd,CAAC,MAAM,IAAIP,UAAU,GAAGI,IAAI,CAACA,IAAI,EAAE;QAC/BG,GAAG,IAAK,GAAEL,UAAU,CAACM,KAAK,GAAG,CAAC,CAAC,CAACL,KAAM,IAAGH,UAAW,YAAWA,UAAW,eAAc;QACxF,OAAOO,GAAG;MACd;MACA,OAAOA,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;;IAEN;IACA,IAAI,CAACF,QAAQ,CAACI,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC7BJ,QAAQ,IAAK,SAAQL,UAAW,eAAc;IAClD;IAEA,OAAQ,kBAAiBK,QAAS,GAAE;EACxC,CAAC;EAED,oBACIP,OAAA;IAAKY,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAEX,WAAW,CAACD,UAAU;IAAE,CAAE;IAAAa,QAAA,gBACvEf,OAAA;MAAKY,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpCnB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAG,QAAA,GACtBb,UAAU,EAAC,GAChB;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAC,EAAA,GAzCKnB,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}